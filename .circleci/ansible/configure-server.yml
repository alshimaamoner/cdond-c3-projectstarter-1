---   
- name: "configuration play." 
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

- name: "Install Node.js 13"
  shell: |
    # Install Node.js LTS version as our base Node.js version
    curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
    sudo apt-get install -y nodejs

    # Use n version manager to switch to Node.js v13.8.0
    sudo npm install -g n
    sudo n 13.8.0  
- name: "Install PM2 Globally"
  npm:
    name: pm2
    global: yes 
    
  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    # - name: "install python for Ansible."
    #   become: true
    #   raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
    #   changed_when: false
    - name: "install python for Ansible."
      apt:
      name: python3
      update_cache: yes

      
    - setup:

  roles:
    - configure-server
    - configure-prometheus-node-exporter
# ---

# - name: "configuration play." 
#   hosts: web
#   user: ubuntu
#   become: true
#   become_method: sudo
#   become_user: root  
#   gather_facts: false
#   vars:
#     - ansible_python_interpreter: /usr/bin/python3
#     - ansible_host_key_checking: false
#     - ansible_stdout_callback: yaml

#   pre_tasks:
#     - name: "wait 600 seconds for target connection to become reachable/usable."
#       wait_for_connection:

#     - name: "install python for Ansible."
#       become: true
#       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
#       changed_when: false

#   # Get the environment variables from CircleCI and add to the EC2 instance
#   environment:
#     - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
#     - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
#     - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
#     - TYPEORM_PORT: 5432
#     - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
#     - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
#     - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
#     - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
#     - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

#   roles:
#     - configure-server
#  # ---

# # - name: "configuration play." 
# #   hosts: web
# #   user: ubuntu
# #   become: true
# #   become_method: sudo
# #   become_user: root  
# #   gather_facts: false
# #   vars:
# #     - ansible_python_interpreter: /usr/bin/python3
# #     - ansible_host_key_checking: false
# #     - ansible_stdout_callback: yaml

# #   pre_tasks:
# #     - name: "wait 600 seconds for target connection to become reachable/usable."
# #       wait_for_connection:

# #     - name: "install python for Ansible."
# #       become: true
# #       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
# #       changed_when: false

# #   # Get the environment variables from CircleCI and add to the EC2 instance
# #   environment:
# #     - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
# #     - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
# #     - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
# #     - TYPEORM_PORT: 5432
# #     - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
# #     - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
# #     - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
# #     - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
# #     - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

# #   roles:
# #     - configure-server